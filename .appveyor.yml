skip_branch_with_pr: true
version: '{build}'
image: Visual Studio 2017

platform:
  - x64

# cache:
#   - C:\\R\\
#   - C:\\Rtools
        
clone_folder: c:\projects\cmdstanr
shallow_clone: true
clone_depth: 1

environment:
  NOT_CRAN: true
  _R_CHECK_FORCE_SUGGESTS_: false
  USE_RTOOLS: true
  HOME: C:\Users\appveyor\
  _R_VERSION: "3.6.1"
  _RTOOLS_VERSION: "35"
  _CMDSTAN_INSTALL_FLAGS: "-j2 -w"
  _R_BUILD_FLAGS: "--no-manual"
  _R_CHECK_FLAGS: "--no-manual --as-cran --install-args=--build"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: |
        $ErrorActionPreference = "Stop"
        if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
  
        & "C:\\Program Files\\Git\\mingw64\\bin\\curl.exe" -s -o ../R-win.exe -L https://cran.rstudio.com/bin/windows/base/R-"+$env:_R_VERSION+"-win.exe
        echo "Running R installer"
        Start-Process -FilePath ..\R-win.exe -ArgumentList "/VERYSILENT /DIR=C:\R" -NoNewWindow -Wait
        & "C:\\Program Files\\Git\\mingw64\\bin\\curl.exe" -s -o ../R-tools-win.exe -L https://cran.rstudio.com/bin/windows/Rtools/Rtools"+$env:_RTOOLS_VERSION+".exe
        echo "Running RTools installer"
        Start-Process -FilePath ..\R-tools-win.exe -ArgumentList /VERYSILENT -NoNewWindow -Wait
  - SET PATH=C:\\R\\bin\\x64;C:\\Rtools\\bin;C:\\Rtools\\mingw_64\\bin;C:\\Rtools\\mingw_32\\bin;%PATH%
  - g++ --version
  - mingw32-make --version
  - echo "Installing R package dependencies"
  - Rscript -e "sessionInfo()"
  - Rscript -e "install.packages(c('remotes', 'knitr', 'pandoc'), repos = 'https://cloud.r-project.org')"
  - Rscript -e "options(repos = c(CRAN = 'https://cloud.r-project.org'), download.file.method = 'auto')"
  - Rscript -e "remotes::install_deps(dependencies = TRUE, type='win.binary')"
  - echo "Installing Cmdstan"
  - bash inst/make_cmdstan.sh %_CMDSTAN_INSTALL_FLAGS%
  - echo "Installation done"

build: false

test_script:
  - SET PATH=C:\\R\\bin\\x64;C:\\Rtools\\bin;C:\\Rtools\\mingw_64\\bin;%PATH%
  - R.exe CMD build . %_R_BUILD_FLAGS%
  - R.exe CMD check .\\cmdstanr_*.tar.gz %_R_CHECK_FLAGS%

on_failure:
  - 7z a failure.zip *.Rcheck\*
  - appveyor PushArtifact failure.zip

artifacts:
  - path: '*.Rcheck\**\*.log'
    name: Logs

  - path: '*.Rcheck\**\*.out'
    name: Logs

  - path: '*.Rcheck\**\*.fail'
    name: Logs

  - path: '*.Rcheck\**\*.Rout'
    name: Logs

  - path: '\*_*.tar.gz'
    name: Bits

  - path: '\*_*.zip'
    name: Bits