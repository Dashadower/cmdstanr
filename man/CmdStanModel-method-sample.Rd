% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{CmdStanModel-method-sample}
\alias{CmdStanModel-method-sample}
\title{Run Stan's default MCMC algorithm}
\description{
The \code{sample} method of a \link{CmdStanModel} object runs the default
MCMC algorithm in CmdStan (\code{algorithm=hmc engine=nuts}), to produce a set
of draws from the posterior distribution of a model conditioned on some
data. Arguments left at \code{NULL} default to the current CmdStan default.
}
\section{Usage}{
\preformatted{$sample(
  num_chains = 1,
# num_cores = NULL, # not yet available
  data = NULL,
  num_warmup = NULL,
  num_samples = NULL,
  save_warmup = FALSE,
  thin = NULL,
  refresh = NULL,
  init = NULL,
  seed = NULL,
  max_depth = NULL,
  metric = NULL,
  stepsize = NULL,
  adapt_engaged = NULL,
  adapt_delta = NULL
)
}
}

\section{Arguments shared by all fitting methods}{
 The following arguments can
be specified for any of the fitting methods (\code{sample}, \code{optimize},
\code{variational}):
\itemize{
\item \code{data} (multiple options): The data to use:
\itemize{
\item A named list of \R objects like for RStan;
\item A path to a data file compatible with CmdStan.
}
\item \code{seed}: (positive integer) A seed for the (P)RNG to pass to CmdStan.
\item \code{refresh}: (non-negative integer) The number of iterations between
screen updates.
\item \code{init}: (multiple options) The initialization method:
\itemize{
\item A real number \code{x>0} initializes randomly between \code{[-x,x]} (on the
\emph{unconstrained} parameter space);
\item \code{0} initializes to \code{0};
\item A character vector of data file paths (one per chain) to
initialization files.
}
}
}

\section{Arguments unique to the \code{sample} method}{
 In addition to the
arguments above, the \code{sample} method also has the following arguments:
\itemize{
\item \code{num_samples}: (positive integer) The number of sampling iterations.
\item \code{num_warmup}: (positive integer) The number of warmup iterations.
\item \code{save_warmup}: (logical) Should warmup iterations also be streamed
to the output?
\item \code{thin}: (positive integer) The period between saved samples.
\item \code{adapt_engaged}: (logical) Do warmup adaptation?
\item \code{adapt_delta}: (real in \code{(0,1)}) The adaptation target acceptance
statistic.
\item \code{stepsize}: (positive real) The initial step size for discrete evolution.
\item \code{metric}: (multiple options) The geometry of the base manifold:
\itemize{
\item A single string from among \code{"diag_e"}, \code{"dense_e"}, \code{"unit_e"};
\item A character vector containing paths to files (one per chain)
compatible with CmdStan that contain precomputed metrics.
}
\item \code{max_depth}: (positive integer) The maximum allowed tree depth.
}
}

\section{Value}{
 The \code{sample} method returns a \code{\link{CmdStanMCMC}} object.
}

\examples{
\dontrun{
# Set path to cmdstan
# Note: if you installed CmdStan via install_cmdstan() with default settings
# then default below should work. Otherwise use the `path` argument to
# specify the location of your CmdStan installation.

set_cmdstan_path(path = NULL)

# Create a CmdStan model object from a Stan program,
# here using the example model that comes with CmdStan
stan_program <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.stan")
mod <- cmdstan_model(stan_program)
mod$print()

# Compile to create executable
mod$compile()

# Run MCMC (Stan's dynamic HMC/NUTS),
# specifying data as a named list (like RStan)
standata <- list(N = 10, y =c(0,1,0,0,0,0,0,0,0,1))
fit <- mod$sample(data = standata, seed = 123, num_chains = 2)
fit$summary()

# Can also specify data as a path to a file readable by CmdStan
my_data_file <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.data.R")
fit2 <- mod$sample(data = my_data_file, seed = 123)
fit2$summary()

# If you like working with RStan's stanfit objects then you can
# also create a stanfit object with rstan::read_stan_csv()
if (require(rstan, quietly = TRUE)) {
  stanfit <- rstan::read_stan_csv(fit$output_files())
}

}

}
\seealso{
\link{CmdStanModel}

Other CmdStanModel-methods: \code{\link{CmdStanModel-method-compile}},
  \code{\link{CmdStanModel-method-optimize}},
  \code{\link{CmdStanModel-method-variational}}
}
\concept{CmdStanModel-methods}
