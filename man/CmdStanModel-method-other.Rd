% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{CmdStanModel-method-other}
\alias{CmdStanModel-method-other}
\title{Compile a Stan program or get the Stan code}
\description{
The \code{compile} method of a \link{CmdStanModel} object calls CmdStan to
translate a Stan program to C++ and call the C++ compiler. The resulting
files are placed in the same directory as the Stan program.

The \code{code} and \code{print} methods return and print the Stan code,
respectively.
}
\section{Usage}{
\preformatted{$compile()
$code()
$print()
}
}

\section{Value}{

\itemize{
\item The \code{code} method returns the Stan code as a string.
\item The \code{print} method prints a readable version of the Stan code and returns
the \link{CmdStanModel} object invisibly.
\item The \code{compile} method returns the \link{CmdStanModel} object invisibly.
}
}

\examples{
\dontrun{
# Set path to cmdstan
# Note: if you installed CmdStan via install_cmdstan() with default settings
# then default below should work. Otherwise use the `path` argument to
# specify the location of your CmdStan installation.

set_cmdstan_path(path = NULL)

# Create a CmdStan model object from a Stan program,
# here using the example model that comes with CmdStan
stan_program <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.stan")
mod <- cmdstan_model(stan_program)
mod$print()

# Compile to create executable
mod$compile()

# Run MCMC (Stan's dynamic HMC/NUTS),
# specifying data as a named list (like RStan)
standata <- list(N = 10, y =c(0,1,0,0,0,0,0,0,0,1))
fit <- mod$sample(data = standata, seed = 123, num_chains = 2)
fit$summary()

# Can also specify data as a path to a file readable by CmdStan
my_data_file <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.data.R")
fit2 <- mod$sample(data = my_data_file, seed = 123)
fit2$summary()

# If you like working with RStan's stanfit objects then you can
# also create a stanfit object with rstan::read_stan_csv()
if (require(rstan, quietly = TRUE)) {
  stanfit <- rstan::read_stan_csv(fit$output_files())
}

}

}
\seealso{
\link{CmdStanModel}

Other CmdStanModel-methods: \code{\link{CmdStanModel-method-optimize}},
  \code{\link{CmdStanModel-method-sample}}
}
\concept{CmdStanModel-methods}
