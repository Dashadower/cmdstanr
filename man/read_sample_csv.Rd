% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_csv.R
\name{read_sample_csv}
\alias{read_sample_csv}
\title{Read samples from CmdStan CSV files into \R}
\usage{
read_sample_csv(
  files,
  parameters = NULL,
  sampler_diagnostics = NULL,
  cores = getOption("mc.cores", 1)
)
}
\arguments{
\item{files}{Paths to the CSV files to read.}

\item{parameters}{(list) When \code{NULL}, the function will return
draws for all model parameters. When supplied a list, the function
will return  draws from the listed model parameters.}

\item{sampler_diagnostics}{(list) When \code{NULL}, the function will return
draws for all sampler diagnostics . When supplied a list, the function
will return  draws from the listed sampler diagnostics .}

\item{cores}{The number of cores to use to read and process the output files}
}
\value{
A named list containing:
\itemize{
\item \code{sampling_info}: A list of the arguments used to run the sampler.
\item \code{inverse_metric}: A list (one element per chain) of inverse mass matrices
or their diagonals, depending on the type of metric used.
\item \code{warmup_draws}:  If \code{save_warmup} was \code{TRUE} then the warmup samples (iter
x chain x variable array).
\item \code{post_warmup_draws}: The post-warmup samples (iter x chain x variable array).
\item \code{warmup_sampler_diagnostics}:  If \code{save_warmup} was \code{TRUE} then the values
of the sampler parameters during warmup (iter x chain x variable array).
\item \code{sampler_diagnostics}: The post-warmup sampler parameters (iter x chain x
variable array).
}
}
\description{
Read samples from CmdStan CSV files into \R
}
\examples{
\dontrun{
stan_program <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.stan")
mod <- cmdstan_model(stan_program)
fit <- mod$sample(data = list(N = 10, y = c(0,1,0,0,0,0,0,0,0,1)))

# Read all draws
d <- read_sample_csv(fit$output_files())
# Read only model parameter draws
d <- read_sample_csv(fit$output_files(), parameters = NULL, sampler_diagnostics = list())
# Read only specific parameter draws
d <- read_sample_csv(fit$output_files(), parameters = list("beta", "theta"), sampler_diagnostics = list())
# Read only specific sampler diagnostic
d <- read_sample_csv(fit$output_files(), parameters = list(), sampler_diagnostics = c("divergent__"))
}

}
