% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{cmdstan_model}
\alias{cmdstan_model}
\title{Create a new CmdStanModel object}
\usage{
cmdstan_model(stan_file)
}
\arguments{
\item{stan_file}{Path to Stan program.}
}
\value{
An \code{\link{CmdStanModel}} object.
}
\description{
\if{html}{\figure{logo.png}{options: width="25px" alt="https://mc-stan.org/about/logo/"}}
The \code{cmdstan_model()} function creates a new \code{\link{CmdStanModel}} object from a
file containing a Stan program.
}
\examples{
\dontrun{
# Set path to cmdstan
# Note: if you used install_cmdstan() with default settings then
# the path below should work. Otherwise change it to wherever you have
# a CmdStan installation.

set_cmdstan_path(file.path(Sys.getenv("HOME"), ".cmdstanr/cmdstan"))

# Create a CmdStan model object from a Stan program,
# here using the example model that comes with CmdStan
stan_program <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.stan")
mod <- cmdstan_model(my_stan_program)
mod$print()

# Compile to create executable
mod$compile()

# Run MCMC (Stan's dynamic HMC/NUTS),
# specifying data as a named list (like RStan)
standata <- list(N = 10, y =c(0,1,0,0,0,0,0,0,0,1))
fit <- mod$sample(data = standata, seed = 123, num_chains = 2)
fit$summary()

# Can also specify data as a path to a file (like CmdStan)
my_data_file <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.data.R")
fit2 <- mod$sample(data = my_data_file, seed = 123)
fit2$summary()

# can also create a stanfit object using rstan package
# stanfit <- rstan::read_stan_csv(fit$output_files())
}

}
\seealso{
\code{\link[=cmdstan_path]{cmdstan_path()}}, \code{\link[=install_cmdstan]{install_cmdstan()}}
}
