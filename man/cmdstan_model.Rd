% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{cmdstan_model}
\alias{cmdstan_model}
\alias{CmdStanModel}
\alias{cmdstanmodel}
\title{Create a new CmdStanModel object}
\usage{
cmdstan_model(stan_file)
}
\arguments{
\item{stan_file}{Path to Stan program.}
}
\value{
An \link[R6:R6]{R6} \code{CmdStanModel} object. See \strong{Available Methods}.
}
\description{
The \code{cmdstan_model()} function creates a new \code{CmdStanModel} object from a
file containing a Stan program.
}
\details{
A \code{CmdStanModel} object stores the path to a Stan program as well as
a path to a compiled executable once created. See \strong{Available Methods}.
}
\section{Available Methods}{
 \code{CmdStanModel} objects have the following
associated methods:
\describe{
\item{\code{code()}}{
Returns the Stan program located at \code{stan_file} as a string.
}
\item{\code{print()}}{
Prints a more readable version of the Stan program returned by \code{code()}.
}
\item{\code{compile()}}{
Compiles the Stan program. Translates the Stan code to C++, then calls the
C++ compiler.
}
\item{\code{sample(data = NULL, ...)}}{
Run the default MCMC algorithm in CmdStan (\code{algorithm=hmc engine=nuts}), to
produce a set of draws from the posterior distribution of a model
conditioned on some data. Arguments:
\itemize{
\item \code{data}: If not \code{NULL}, then either a path to a data file compatible with
CmdStan or a named list of \R objects like for RStan.
\item \code{...}: Arguments to pass to CmdStan to control sampling.
TODO: enumerate these instead of \code{...}.
}

Returns a \code{\link{CmdStanMCMC}} object created from the csv files written by
CmdStan. Those csv files are written to the same directory as \code{stan_file}.
}
}
}

\examples{
set_cmdstan_path("/Users/jgabry/Documents/Stan/cmdstan-2.20.0")
my_stan_program <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.stan")
mod <- cmdstan_model(stan_file = my_stan_program)
mod$print()
mod$compile()

# specify data as a named list (like RStan)
standata <- list(N = 10, y =c(0,1,0,0,0,0,0,0,0,1))
fit <- mod$sample(data = standata, seed = 123, num_chains = 1)
fit$summary()

# specify data as a path to a file (like CmdStan)
my_data_file <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.data.R")
fit2 <- mod$sample(data = my_data_file, seed = 123)
fit2$summary()

# can also create a stanfit object using rstan package
# stanfit <- rstan::read_stan_csv(fit$output_files)

}
\seealso{
\code{\link[=cmdstan_path]{cmdstan_path()}}
}
